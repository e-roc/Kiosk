package com.locusenergy.menus {	import flash.display.*;	import flash.text.*;	import flash.geom.Matrix;	import flash.filters.GlowFilter;	import flash.events.*;		public class Menuitem extends MovieClip{								// Constants:		// Public Properties:		public var url;		public var style;		public var menuTitle:TextField;		public var buttonBg:Sprite;		public var obj:Object;		public var index:int;		// Private Properties:		private var matrix:Matrix = new Matrix();		private var buttonHeight;		private var buttonWidth;		private var rounding;		private var glow:GlowFilter;		private var highlight:Sprite;		private var maskBox:Sprite;		private var colorsArray:Array;		private var alphasArray:Array;		private var ratiosArray:Array;		// Initialization:		public function Menuitem(title, alt, style, obj:Object) 		{			this.obj = obj;			setMenuTitle(title, style);			drawButtonBg(style);						buttonBg.addChild(menuTitle);			menuTitle.y = buttonHeight/2 - menuTitle.height/2;			if (style == Constants.SUB) menuTitle.y = menuTitle.y + 10; 			menuTitle.x = buttonWidth/2 - menuTitle.width/2;						buttonBg.addEventListener(MouseEvent.CLICK,clickAction);		}			public function clickAction(e:MouseEvent)		{			//this.makeSelected(style);		}				public function makeSelected(style:String)		{			if (style == Constants.MAIN)			{				colorsArray = new Array(0x0E4E8C, 0x072746);//0x001C39, 0x072746,				alphasArray = new Array(1.0, 1.0);				ratiosArray = new Array(0,255);				matrix.createGradientBox( buttonWidth, buttonHeight,Math.PI/2);				buttonBg.graphics.beginGradientFill("linear", colorsArray, alphasArray, ratiosArray, matrix, SpreadMethod.PAD, InterpolationMethod.LINEAR_RGB);				buttonBg.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight,rounding);				buttonBg.graphics.endFill();			}			else if (style == Constants.SUB)			{				colorsArray = new Array(0x2D4813, 0x72BF00);//0x001C39, 0x072746,				alphasArray = new Array(1.0, 1.0);				ratiosArray = new Array(0,128);				matrix.createGradientBox( buttonWidth, buttonHeight,Math.PI/2);				buttonBg.graphics.beginGradientFill("linear", colorsArray, alphasArray, ratiosArray, matrix, SpreadMethod.PAD, InterpolationMethod.LINEAR_RGB);				buttonBg.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight,rounding);				buttonBg.graphics.endFill();			}			else if (style == Constants.SIDE)			{				colorsArray = new Array(0x001C39, 0x000408);//0x001C39, 0x072746,				alphasArray = new Array(1.0, 1.0);				ratiosArray = new Array(0,255);				matrix.createGradientBox( buttonWidth, buttonHeight,Math.PI/2);				buttonBg.graphics.lineStyle(0.0,0x00000,0.8,true,LineScaleMode.NONE);				buttonBg.graphics.beginGradientFill("linear", colorsArray, alphasArray, ratiosArray, matrix, SpreadMethod.PAD, InterpolationMethod.LINEAR_RGB);				buttonBg.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight,rounding);				buttonBg.graphics.endFill();			}		}		public function drawButtonBg(style)		{						var colorsArray:Array;			var alphasArray:Array;			var ratiosArray:Array;			if (style == Constants.MAIN)			{				buttonHeight = 65;				buttonWidth = menuTitle.width + 45;				rounding = 15;								buttonBg = new Sprite();				buttonBg.graphics.beginFill(0xdd1234);				colorsArray = new Array(0x001C39, 0x000408);//0x001C39, 0x072746,				alphasArray = new Array(1.0, 1.0);				ratiosArray = new Array(0,255);				matrix.createGradientBox( buttonWidth, buttonHeight,Math.PI/2);				buttonBg.graphics.beginGradientFill("linear", colorsArray, alphasArray, ratiosArray, matrix, SpreadMethod.PAD, InterpolationMethod.LINEAR_RGB);				buttonBg.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight,rounding);				buttonBg.graphics.endFill();								highlight = new Sprite();				highlight.graphics.beginFill(0xffffff, 0.15);				highlight.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight,rounding);				highlight.graphics.endFill();								maskBox = new Sprite();				maskBox.graphics.beginFill(0x000000);				maskBox.graphics.drawRect(0,0,buttonWidth,buttonHeight/2);				maskBox.graphics.endFill();								glow = new GlowFilter();				glow.alpha= 0.19;				glow.blurX = 10;				glow.blurY = 15;				glow.color = 0x000000;								buttonBg.filters =  new Array(glow);				addChild(buttonBg);				buttonBg.addChild(highlight);				buttonBg.addChild(maskBox);				highlight.mask = maskBox;							}			else if (style == Constants.SUB)			{				buttonHeight = 70;				buttonWidth = menuTitle.width + 50;				rounding = 20;								buttonBg = new Sprite();				buttonBg.graphics.beginFill(0xffffff, 0.15);				buttonBg.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight,rounding);				buttonBg.graphics.endFill();				highlight = new Sprite();				highlight.graphics.beginFill(0xffffff, 0.15);				colorsArray = new Array(0xffffff, 0xffffff);				highlight.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight/2,rounding);								maskBox = new Sprite();				maskBox.graphics.beginFill(0x000000);				maskBox.graphics.drawRect(0,10,buttonWidth,buttonHeight);				maskBox.graphics.endFill();								addChild(buttonBg);				addChild(maskBox);				buttonBg.mask = maskBox;			}			else if (style == Constants.SIDE)			{				buttonHeight = 65;				buttonWidth = 140;				buttonBg = new Sprite();				rounding = 15;				colorsArray = new Array(0x20466C , 0x002346);				alphasArray = new Array(1.0, 1.0);				ratiosArray = new Array(0,120);				matrix.createGradientBox( buttonWidth, buttonHeight,Math.PI/2);				buttonBg.graphics.beginGradientFill("linear", colorsArray, alphasArray, ratiosArray, matrix, SpreadMethod.PAD, InterpolationMethod.LINEAR_RGB);				buttonBg.graphics.lineStyle(0.05, 0xFFFFFF, 0.2, true,LineScaleMode.NONE);				buttonBg.graphics.drawRoundRect(0,0,buttonWidth,buttonHeight,rounding);				buttonBg.graphics.endFill();				addChild(buttonBg);			}					}		public function setMenuTitle(title:String, style:String)		{			Font.registerFont(GothamNarrowBold);			var textFormat:TextFormat = new TextFormat("Gotham Narrow Medium", 18, 0xffffff);			if (style == Constants.SUB)			{				textFormat.size = 14;			}								menuTitle 				= new TextField();				menuTitle.antiAliasType = flash.text.AntiAliasType.ADVANCED;				menuTitle.embedFonts 	= true;				menuTitle.text 			= title;				menuTitle.autoSize 		= TextFieldAutoSize.LEFT;				menuTitle.selectable	= false;				menuTitle.setTextFormat(textFormat);		}				// Public Methods:		// Protected Methods:	}	}