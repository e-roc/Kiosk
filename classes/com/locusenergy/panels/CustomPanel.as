package com.locusenergy.panels {		import flash.display.Sprite;	import com.locusenergy.AssetCache;	import com.locusenergy.menus.Menu;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.events.EventDispatcher;	import flash.utils.Timer;		public class CustomPanel extends Panel{				private const setHeight =  508;		private const maxWidth = 766;				public function CustomPanel(connector) 		{			loadSubMenu(0);			showPic(0);			hasInternalSlideshow = true;			internalSSDelay();		}		override protected function additionalCalls()		{			dispatchEvent(new Event("TabDataLoaded"));		}		override protected function loadSubMenu(index)		{			subMenu = new Menu("SUB",index);			for each(var title in AssetCache.customTitles)				subMenu.addMenuItem(title,"", title);			for (var i=0 in subMenu.menuItemArray)			{				subMenu.menuItemArray[i].addEventListener(MouseEvent.CLICK, itemClicked, false, 0, true);				subMenu.menuItemArray[i].index = i;			}			this.addChild(subMenu);			subMenu.x = 640 - subMenu.width/2;			subMenu.y = 0;		}		override protected function itemClicked(me:MouseEvent)		{			removeMenuEventHandlers();			removeAllChildren();			loadSubMenu(me.currentTarget.index);			showPic(me.currentTarget.index);		}		private function showPic(index)		{			var pic = AssetCache.customImages[index];			if (pic != null)			{				var ratio = setHeight/pic.height;				if (ratio * pic.width > maxWidth)				{					ratio = maxWidth/pic.width;				}				pic.width = ratio * pic.width;				pic.height = ratio * pic.height;				addChild(pic);				pic.x = 640 - pic.width/2;				pic.y = 345 - pic.height/2;			}					}		override protected function removeAdditionalEventHandlers()		{		}	}	}