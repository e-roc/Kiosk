package com.locusenergy {		import flash.net.URLRequest;	import flash.events.ProgressEvent;	import flash.events.*;	import flash.display.*;	import flash.utils.getQualifiedClassName;	import flash.display.Sprite;	//import flash.errors.IOError;		public class LoadAssets extends Sprite{				// Constants:		// Public Properties:		public var mLoader:Loader;		public var asset:Sprite;		public var onCompleteFunction:Function;		public var preloader:Sprite;		// Private Properties:			// Initialization:		public function LoadAssets(url:String, functionComplete:Function)		{			mLoader = new Loader();			onCompleteFunction =  functionComplete;			var mRequest:URLRequest = new URLRequest(url);			mLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, onCompleteHandler, false, 0, true);			mLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onProgressHandler, false, 0, true);			mLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler, false, 0, true);						try			{				trace("Attempting to Load Asset:", url);				//preloader = new Sprite();				//addChild(preloader);				mLoader.load(mRequest);			}			catch (error:Error)			{				trace ("Load error", error);			}		}		public function onCompleteHandler(loadEvent:Event)		{					asset = new Sprite();			if (getQualifiedClassName(loadEvent.currentTarget.content) == "flash.display::Bitmap")			{				var bitmap = loadEvent.currentTarget.content as Bitmap;				bitmap.smoothing = true;				asset.addChild(loadEvent.currentTarget.content);			}			else				asset = Sprite(loadEvent.currentTarget.content);			trace ("Asset Loaded " + asset.toString());			onCompleteFunction(asset);					}		public function onProgressHandler(mProgress:ProgressEvent)		{				var percent:Number = mProgress.bytesLoaded/mProgress.bytesTotal;//				preloader.graphics.lineStyle(10, 0xff0000);//				preloader.graphics.moveTo(0, 0);//				preloader.graphics.lineTo(percent*500,0);				trace(percent*100,"%", mLoader.contentLoaderInfo.hasEventListener(Event.COMPLETE));						}		public function ioErrorHandler(e)		{			trace("Image Not Found.");			dispatchEvent(new Event("ImageNotFound"));		}	}	}